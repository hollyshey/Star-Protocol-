import numpy as np import matplotlib.pyplot as plt

SILENCE = -1

----- ترکیب حالات -----

def combine_bits(a, b): if a == SILENCE and b == SILENCE: return 'هیچ' elif a == 0 and b == 1 or a == 1 and b == 0: return 'تعامل' elif (a == 0 and b == SILENCE) or (a == SILENCE and b == 0): return 'نیمه فعال' elif (a == 1 and b == SILENCE) or (a == SILENCE and b == 1): return 'نیمه خاموش' else: return 'نامشخص'

----- تابع تولید موج بر اساس ترکیب -----

def harmonic_wave(t, combo): if combo == 'هیچ': return np.zeros_like(t) elif combo == 'تعامل': return np.sin(2 * np.pi * 5 * t) elif combo == 'نیمه فعال': return 0.5 * np.sin(2 * np.pi * 3 * t) elif combo == 'نیمه خاموش': return 0.5 * np.sin(2 * np.pi * 7 * t) else: return np.zeros_like(t)

----- کلاس گره -----

class Node: def init(self, id, state): self.id = id self.state = state self.history = []

def send_state(self):
    return self.state

----- دیوار آتش هارمونیک -----

def harmonic_firewall(wave): spectrum = np.fft.fft(wave) freqs = np.fft.fftfreq(len(wave)) power = np.abs(spectrum) # حذف سیگنال‌هایی با قدرت پایین یا بدون قله مشخص if np.max(power) < 10 or np.std(power) < 2: return False  # حذف یا قرنطینه return True

----- پیامبر شبکه -----

class Prophet: def init(self, nodes): self.nodes = nodes

def collect_states(self):
    return [node.send_state() for node in self.nodes]

def analyze_combinations(self):
    states = self.collect_states()
    combos = []
    for i in range(len(states)-1):
        combos.append(combine_bits(states[i], states[i+1]))
    return combos

def harmonic_signal(self, t):
    combos = self.analyze_combinations()
    wave = np.zeros_like(t)
    for c in combos:
        wave += harmonic_wave(t, c)
    return wave

----- رسم ستاره با توالی‌های غیرمتوالی -----

def draw_star_sequence(sequence, positions): for i in range(len(sequence) - 1): a = positions[sequence[i] - 1] b = positions[sequence[i + 1] - 1] plt.plot([a[0], b[0]], [a[1], b[1]], 'r--') for idx, (x, y) in enumerate(positions): plt.text(x, y, str(idx + 1), fontsize=12, ha='center') plt.plot(x, y, 'ko')

----- اجرای کل سیستم -----

if name == 'main': t = np.linspace(0, 1, 500) nodes = [Node(1, 0), Node(2, 1), Node(3, SILENCE), Node(4, 1), Node(5, 0)] prophet = Prophet(nodes) wave = prophet.harmonic_signal(t)

if harmonic_firewall(wave):
    plt.figure(figsize=(12,5))

    # رسم موج
    plt.subplot(1,2,1)
    plt.plot(t, wave)
    plt.title("موج ترکیبی شبکه")
    plt.xlabel("زمان")
    plt.ylabel("دامنه")

    # رسم ستاره با توالی غیرمتوالی
    star_positions = [(0,1), (1,0.3), (0.6,-1), (-0.6,-1), (-1,0.3)]
    sequence = [2, 4, 1, 3, 5, 2]

    plt.subplot(1,2,2)
    draw_star_sequence(sequence, star_positions)
    plt.title("رسم مسیر ستاره‌ای")
    plt.axis('off')

    plt.tight_layout()
    plt.show()
else:
    print("🚫 موج رد شد: رفتار غیر هارمونیک یا پرنویز تشخیص داده شد.")

